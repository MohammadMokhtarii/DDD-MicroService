// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NotificationManagement.Infrastructure.Persistence.Context;

#nullable disable

namespace NotificationManagement.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class NotificationManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence("notificationseq", "NotificationManagement")
                .IncrementsBy(10);

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseHiLo(b.Property<int>("Id"), "notificationseq", "NotificationManagement");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("NotificationPriorityId")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("_notificationPriorityId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationPriorityId");

                    b.Property<int>("_notificationStatusId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationStatusId");

                    b.Property<int>("_notificationTypeId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationTypeId");

                    b.Property<bool>("_read")
                        .HasColumnType("bit")
                        .HasColumnName("Read");

                    b.Property<int>("_retryCount")
                        .HasColumnType("int")
                        .HasColumnName("RetryCount");

                    b.HasKey("Id");

                    b.HasIndex("NotificationPriorityId");

                    b.HasIndex("NotificationStatusId");

                    b.HasIndex("NotificationTypeId");

                    b.ToTable("Notifications", "NotificationManagement", t =>
                        {
                            t.Property("NotificationPriorityId")
                                .HasColumnName("NotificationPriorityId1");

                            t.Property("NotificationStatusId")
                                .HasColumnName("NotificationStatusId1");

                            t.Property("NotificationTypeId")
                                .HasColumnName("NotificationTypeId1");
                        });
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationAcitvity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int?>("NotificationStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("_createdOn")
                        .HasColumnType("datetime2")
                        .HasColumnName("CreatedOn");

                    b.Property<int>("_notificationId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationId");

                    b.Property<int>("_notificationStatusId")
                        .HasColumnType("int")
                        .HasColumnName("NotificationStatusId");

                    b.Property<string>("_response")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Response");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("NotificationStatusId");

                    b.ToTable("NotificationAcitvities", "NotificationManagement", t =>
                        {
                            t.Property("NotificationId")
                                .HasColumnName("NotificationId1");

                            t.Property("NotificationStatusId")
                                .HasColumnName("NotificationStatusId1");
                        });
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationPriority", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("NotificationPriorities", "NotificationManagement");
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("NotificationStatuses", "NotificationManagement");
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("NotificationTypes", "NotificationManagement");
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.Notification", b =>
                {
                    b.HasOne("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationPriority", "NotificationPriority")
                        .WithMany()
                        .HasForeignKey("NotificationPriorityId");

                    b.HasOne("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationStatus", "NotificationStatus")
                        .WithMany()
                        .HasForeignKey("NotificationStatusId");

                    b.HasOne("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationType", "NotificationType")
                        .WithMany()
                        .HasForeignKey("NotificationTypeId");

                    b.Navigation("NotificationPriority");

                    b.Navigation("NotificationStatus");

                    b.Navigation("NotificationType");
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationAcitvity", b =>
                {
                    b.HasOne("NotificationManagement.Domain.Entities.NotificationAggregate.Notification", null)
                        .WithMany("NotificationAcitvities")
                        .HasForeignKey("NotificationId");

                    b.HasOne("NotificationManagement.Domain.Entities.NotificationAggregate.NotificationStatus", "NotificationStatus")
                        .WithMany()
                        .HasForeignKey("NotificationStatusId");

                    b.Navigation("NotificationStatus");
                });

            modelBuilder.Entity("NotificationManagement.Domain.Entities.NotificationAggregate.Notification", b =>
                {
                    b.Navigation("NotificationAcitvities");
                });
#pragma warning restore 612, 618
        }
    }
}
